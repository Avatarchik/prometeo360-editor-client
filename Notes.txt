## connect to dev server
ssh -i "isrs-ubuntu-key.pem" ubuntu@ec2-54-194-254-66.eu-west-1.compute.amazonaws.com

------------------------------------------------------------------------------------------------------------
0) init ubuntu server
------------------------------------------------------------------------------------------------------------

https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-14-04

------------------------------------------------------------------------------------------------------------
1) install nodejs
------------------------------------------------------------------------------------------------------------

https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-an-ubuntu-14-04-server

Because of a conflict with another package,
the executable from the Ubuntu repositories is called nodejs instead of node.
Keep this in mind as you are running software.

------------------------------------------------------------------------------------------------------------
2) install couchdb & futon
------------------------------------------------------------------------------------------------------------

https://www.digitalocean.com/community/tutorials/how-to-install-couchdb-and-futon-on-ubuntu-14-04

sudo apt-get install software-properties-common
sudo apt-get install couchdb
# test installation
curl localhost:5984
#first db
curl -X PUT localhost:5984/testdb
# securing
stop couchdb
sudo chown -R couchdb:couchdb /usr/lib/couchdb /usr/share/couchdb /etc/couchdb /usr/bin/couchdb
start couchdb
# Futon ssh tunnel (On local machine)
ssh -L5984:127.0.0.1:5984 gabfusi@130.251.47.113
# accessing futon
http://localhost:5984/_utils



------------------------------------------------------------------------------------------------------------
3) Create a new database
------------------------------------------------------------------------------------------------------------

curl -X PUT localhost:5984/prometeo_db

couchdb admin user:
admin
1q2w3e4r

------------------------------------------------------------------------------------------------------------
4) nodejs on port 80
------------------------------------------------------------------------------------------------------------

http://stackoverflow.com/questions/16573668/best-practices-when-running-node-js-with-port-80-ubuntu-linode

redirect port 80 to port 3000 with this command:
> sudo iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 3000

> insert it on startup
sudo nano /etc/rc.local
add: iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 3000


------------------------------------------------------------------------------------------------------------
5) run node script with forever!
------------------------------------------------------------------------------------------------------------

sudo npm install forever -g
forever start index.js

# extra
forever list
forever restartall
forever logs


------------------------------------------------------------------------------------------------------------
6) Install ffmpeg
------------------------------------------------------------------------------------------------------------

http://trac.ffmpeg.org/wiki/CompilationGuide/Ubuntu

#dependancies
sudo apt-get install autoconf automake build-essential libass-dev libfreetype6-dev \
  libsdl1.2-dev libtheora-dev libtool libva-dev libvdpau-dev libvorbis-dev libxcb1-dev libxcb-shm0-dev \
  libxcb-xfixes0-dev pkg-config texinfo zlib1g-dev

#yasm
sudo apt-get install yasm

#libx264
sudo apt-get install libx264-dev

# lib mp3lame
sudo apt-get install libmp3lame-dev

#opus
sudo apt-get install libopus-dev

# ffmpeg
FFMPEG_DIR=/var/ffmpeg
mkdir $FFMPEG_DIR/ffmpeg_sources
cd $FFMPEG_DIR/ffmpeg_sources
wget http://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2
tar xjvf ffmpeg-snapshot.tar.bz2
cd ffmpeg
PATH="$FFMPEG_DIR/bin:$PATH" PKG_CONFIG_PATH="$FFMPEG_DIR/ffmpeg_build/lib/pkgconfig" ./configure \
  --prefix="$FFMPEG_DIR/ffmpeg_build" \
  --pkg-config-flags="--static" \
  --extra-cflags="-I$FFMPEG_DIR/ffmpeg_build/include" \
  --extra-ldflags="-L$FFMPEG_DIR/ffmpeg_build/lib" \
  --bindir="$FFMPEG_DIR/bin" \
  --enable-gpl \
  --enable-libass \
  --enable-libfreetype \
  --enable-libmp3lame \
  --enable-libopus \
  --enable-libtheora \
  --enable-libvorbis \
  --enable-libx264 \
  --enable-nonfree
PATH="$FFMPEG_DIR/bin:$PATH" make
make install
make distclean
hash -r
